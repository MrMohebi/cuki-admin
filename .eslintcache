[{"E:\\WorkProjects\\cuki-admin\\src\\index.js":"1","E:\\WorkProjects\\cuki-admin\\src\\App.js":"2","E:\\WorkProjects\\cuki-admin\\src\\reduxStore\\store.js":"3","E:\\WorkProjects\\cuki-admin\\src\\reduxStore\\reducers\\index.js":"4","E:\\WorkProjects\\cuki-admin\\src\\Components\\signin\\Signin.js":"5","E:\\WorkProjects\\cuki-admin\\src\\Components\\sidebar\\Sidebar.js":"6","E:\\WorkProjects\\cuki-admin\\src\\Components\\enterBankInfo\\EnterBankInfo.js":"7","E:\\WorkProjects\\cuki-admin\\src\\Components\\resReceiptsList\\ResReceiptsList.js":"8","E:\\WorkProjects\\cuki-admin\\src\\reduxStore\\reducers\\reducerAdminInfo.js":"9","E:\\WorkProjects\\cuki-admin\\src\\reduxStore\\reducers\\reducerGeneralData.js":"10","E:\\WorkProjects\\cuki-admin\\src\\reduxStore\\actions.js":"11","E:\\WorkProjects\\cuki-admin\\src\\ApiRequests\\requests.js":"12","E:\\WorkProjects\\cuki-admin\\src\\reduxStore\\cachedData\\cachedData.js":"13","E:\\WorkProjects\\cuki-admin\\src\\reduxStore\\reducers\\__init__Reducers.js":"14","E:\\WorkProjects\\cuki-admin\\src\\reduxStore\\actionTypes.js":"15","E:\\WorkProjects\\cuki-admin\\src\\Components\\newResReceipt\\NewResReceipt.js":"16","E:\\WorkProjects\\cuki-admin\\src\\Components\\navBar\\navBar.js":"17"},{"size":358,"mtime":1618136831915,"results":"18","hashOfConfig":"19"},{"size":1312,"mtime":1618213150488,"results":"20","hashOfConfig":"19"},{"size":131,"mtime":1618136831918,"results":"21","hashOfConfig":"19"},{"size":245,"mtime":1618136831917,"results":"22","hashOfConfig":"19"},{"size":3768,"mtime":1618136831914,"results":"23","hashOfConfig":"19"},{"size":3452,"mtime":1618136831913,"results":"24","hashOfConfig":"19"},{"size":2811,"mtime":1618136831908,"results":"25","hashOfConfig":"19"},{"size":5889,"mtime":1618136831912,"results":"26","hashOfConfig":"19"},{"size":903,"mtime":1618136831918,"results":"27","hashOfConfig":"19"},{"size":650,"mtime":1618136831918,"results":"28","hashOfConfig":"19"},{"size":612,"mtime":1618136831916,"results":"29","hashOfConfig":"19"},{"size":1680,"mtime":1618136831886,"results":"30","hashOfConfig":"19"},{"size":143,"mtime":1618136831916,"results":"31","hashOfConfig":"19"},{"size":311,"mtime":1618136831917,"results":"32","hashOfConfig":"19"},{"size":143,"mtime":1618136831916,"results":"33","hashOfConfig":"19"},{"size":5282,"mtime":1618136831909,"results":"34","hashOfConfig":"19"},{"size":2622,"mtime":1618213217845,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1jijgd1",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"E:\\WorkProjects\\cuki-admin\\src\\index.js",[],["78","79"],"E:\\WorkProjects\\cuki-admin\\src\\App.js",["80"],"import React from 'react';\r\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\r\nimport $ from 'jquery';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle'\r\nimport Login from \"./Components/signin/Signin\";\r\nimport Sidebar from \"./Components/sidebar/Sidebar\";\r\nimport ResReceiptsList from \"./Components/resReceiptsList/ResReceiptsList\";\r\nimport EnterBankInfo from \"./Components/enterBankInfo/EnterBankInfo\";\r\nimport NewResReceipt from \"./Components/newResReceipt/NewResReceipt\";\r\nimport NavBar from \"./Components/navBar/navBar\";\r\n\r\n\r\n$(\"body\").css({backgroundColor: '#b7b1c2'})\r\n\r\nfunction App() {\r\n  return (\r\n      <div>\r\n          <Router>\r\n              {/*<Route  path='/*' render={ ( props ) => ( props.location.pathname !== \"/\" && props.location.pathname !== \"/signin\") && <Sidebar /> }/>*/}\r\n              <Route  path='/*' component={NavBar}/>\r\n              {/*<Route path={'resReceipts'} component={NewResReceipt}/>*/}\r\n              <Route exact path='/' component={Login}/>\r\n              <Route path='/resReceipts' component={ResReceiptsList}/>\r\n              <Route path='/eBank/:res__RId' component={EnterBankInfo}/>\r\n              <Route path='/nrr' component={NewResReceipt}/>\r\n          </Router>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\WorkProjects\\cuki-admin\\src\\reduxStore\\store.js",[],"E:\\WorkProjects\\cuki-admin\\src\\reduxStore\\reducers\\index.js",[],"E:\\WorkProjects\\cuki-admin\\src\\Components\\signin\\Signin.js",["81"],"import React from \"react\";\r\nimport $ from 'jquery';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUser, faKey } from '@fortawesome/free-solid-svg-icons'\r\nimport 'animate.css/animate.css'\r\nimport * as actions from '../../reduxStore/actions'\r\nimport * as requests from '../../ApiRequests/requests'\r\n\r\n\r\nclass Login extends React.Component {\r\n\r\n    state = {\r\n        inputClass : \"input-group mb-3 ml-5\"\r\n    }\r\n\r\n    checkUserPass = (response) =>{\r\n        if(response.statusCode === 401 || response.statusCode === 400){\r\n            this.setState({\r\n                inputClass : \"input-group mb-3 ml-5 animate__animated animate__headShake\"\r\n            })\r\n            setTimeout(()=>this.setState({inputClass : \"input-group mb-3 ml-5\"}), 3000)\r\n        }else if(response.statusCode === 200){\r\n            console.log(response.data);\r\n            this.props.setAdminData(response.data);\r\n            this.props.history.push('/dashboard')\r\n            $('.components > li').removeClass('active')\r\n            $('.dashboard').toggleClass('active')\r\n        }\r\n\r\n    }\r\n\r\n    handleSubmitForm = (elm) =>{\r\n        elm.preventDefault();\r\n        let username = $('#usernameId').val()\r\n        let password = $('#passwordId').val()\r\n        requests.login(username, password, this.checkUserPass)\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"border shadow-sm\" style={loginBox}>\r\n                <img className=\"mt-4 mb-3\" src=\"./img/logo/Cuki Logo(256x256).png\" width=\"230px\" height=\"230px\" />\r\n                <form onSubmit={this.handleSubmitForm}>\r\n                    <div style={{width: \"250px\"}} className={this.state.inputClass}>\r\n                        <input className=\"form-control text-right\" id=\"usernameId\" type=\"text\" placeholder=\"نام کاربری \" />\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\"><FontAwesomeIcon icon={faUser} /></span>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{width: \"250px\", position:\"related\"}} className={this.state.inputClass}>\r\n                        <input className=\"form-control text-right\" id=\"passwordId\" type=\"password\" placeholder=\"گذرواژه \"/>\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\"><FontAwesomeIcon icon={faKey} /></span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div style={{textAlign:\"right\", margin:\"0 50px 10px 0\"}}>\r\n                        <input id=\"remember_me\" type=\"checkbox\" name=\"remember\" defaultChecked/>\r\n                        <label htmlFor=\"remember_me\" className=\"mr-1 ml-2\"> مرا به خاطر بسپار</label>\r\n                    </div>\r\n                    <button className=\"red_button btn-danger pr-4 pl-4 mb-4 rounded\" name=\"login\"><span> ورود </span></button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = () => {\r\n    return {\r\n        setAdminData: actions.setAdminData\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n\r\n//------------------------------------------ Styles --------------------------------------\r\n\r\nlet loginBox =  {\r\n    textAlign : \"center\",\r\n    position: 'absolute',\r\n    top: '0%',\r\n    bottom: '0%',\r\n    right: '0%',\r\n    left: '0%',\r\n    margin: 'auto',\r\n    borderRadius: '10px',\r\n    width: '350px',\r\n    height: 'min-content',\r\n    background: 'rgb(238,211,211) linear-gradient(180deg, rgba(238,211,211,1) 0%, rgba(226,236,237,1) 100%) '\r\n}","E:\\WorkProjects\\cuki-admin\\src\\Components\\sidebar\\Sidebar.js",["82","83","84","85","86","87","88","89","90"],"import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport $ from 'jquery';\r\nimport * as cookies from \"../../reduxStore/cachedData/cachedData\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n    faBriefcase,\r\n    faHome,\r\n    faCopy,\r\n    faAlignLeft,\r\n    faImage,\r\n    faQuestion,\r\n    faPlane,\r\n    faAlignJustify\r\n} from '@fortawesome/free-solid-svg-icons'\r\nimport 'animate.css/animate.css'\r\nimport './css/stylesheet.css'\r\n\r\n\r\nconst Sidebar = props => {\r\n\r\n    return(\r\n        <div className=\"wrapper\">\r\n            <div id=\"content\">\r\n                <button onClick={()=>{$('#sidebar').toggleClass('active');}} type=\"button\" id=\"sidebarCollapse\" className=\"btn\" style={{backgroundColor:\"#FEC20E\"}}>\r\n                    <FontAwesomeIcon icon={faAlignLeft}/>\r\n                </button>\r\n            </div>\r\n            <nav id=\"sidebar\">\r\n                <div className=\"sidebar-header\">\r\n                    <h3>Admins Panel</h3>\r\n\r\n                    <strong>AP</strong>\r\n                </div>\r\n\r\n                <ul className=\"list-unstyled components \">\r\n                    <li className=\" mb-2 mt-2 dashboard\" >\r\n                        <a  onClick={()=>{props.history.push(\"/dashboard\")\r\n\r\n                            $('.components > li').removeClass('active')\r\n                            $('.dashboard').toggleClass('active')\r\n                        }} href=\"#homeSubmenu\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"radiusBorder rightAlign\">\r\n                            <FontAwesomeIcon icon={faHome}/>\r\n                            <div className='sectorText'>داشبورد</div>\r\n                        </a>\r\n                    </li>\r\n\r\n                    <li className=\" mb-2 mt-2 dashboard\" >\r\n                        <a  onClick={()=>{props.history.push(\"/resReceipts\")\r\n                            $('.components > li').removeClass('active')\r\n                            $('.dashboard').toggleClass('active')\r\n                        }} href=\"#homeSubmenu\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"radiusBorder rightAlign\">\r\n                            <FontAwesomeIcon icon={faHome}/>\r\n                            <div className='sectorText'>فاکتور رستوران</div>\r\n                        </a>\r\n                    </li>\r\n\r\n\r\n                    <li className=' mb-2 mt-2 cotactUs'>\r\n                        <a onClick={()=>{props.history.push(\"/cotactUs\")\r\n\r\n                            $('.components > li').removeClass('active')\r\n                            $('.cotactUs').toggleClass('active')\r\n                        }} href=\"#\" className='radiusBorder rightAlign'>\r\n                            <FontAwesomeIcon icon={faPlane}/>\r\n                            <div className='sectorText'>پشتیبانی فنی</div>\r\n                        </a>\r\n                    </li>\r\n\r\n                    <li className=' mb-2 mt-2 '>\r\n                        <a onClick={()=>{props.history.push(\"/?logout\")}} href=\"\" className='radiusBorder rightAlign'>\r\n                            <div className='sectorText'>خروج</div>\r\n                        </a>\r\n                    </li>\r\n\r\n                </ul>\r\n\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Sidebar)\r\n\r\n//------------------------------------------ Styles --------------------------------------\r\n\r\n","E:\\WorkProjects\\cuki-admin\\src\\Components\\enterBankInfo\\EnterBankInfo.js",[],"E:\\WorkProjects\\cuki-admin\\src\\Components\\resReceiptsList\\ResReceiptsList.js",["91"],"import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport {Button}  from \"@material-ui/core\";\r\nimport moment from 'moment-jalaali'\r\nimport * as actions from \"../../reduxStore/actions\";\r\nimport * as requests from \"../../ApiRequests/requests\"\r\nimport \"./css/style.css\"\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nconst ReactSwal = withReactContent(Swal)\r\n\r\n\r\n\r\nclass ResReceiptsList extends Component {\r\n    state ={\r\n        row:[],\r\n    }\r\n    componentDidMount() {\r\n        this.getResReceipts();\r\n    }\r\n\r\n    columns = [\r\n        {\r\n            field: 'pay',\r\n            headerName: 'پرداخت',\r\n            sortable: false,\r\n            renderCell:(receipt)=> {\r\n                if(receipt.value['status'] === \"created-notPaid\")\r\n                    return <Button onClick={()=>{this.props.history.push(\"/eBank/\"+ receipt.value['resEnglishName'] +\"__\"+receipt.value['resSettlementId'])}} variant=\"outlined\" color=\"primary\" >Pay</Button>;\r\n                else\r\n                    return <Button disabled>Paied</Button>\r\n            }\r\n        },\r\n        { field: 'moreDetails',\r\n            headerName: 'اطلاعات بیشتر',\r\n            sortable: false,\r\n            renderCell:(receipt)=> {\r\n                return <Button onClick={()=>{this.handleMoreDetails(receipt.value)}} variant=\"outlined\" color=\"primary\" >MD</Button>;\r\n            }\r\n\r\n        },\r\n        { field: 'date', headerName: 'تاریخ', sortable: false, flex:1},\r\n        { field: 'status', headerName: 'وضعیت', flex:1},\r\n        { field: 'amount', headerName: 'مبلغ', type: 'number', flex:1},\r\n        { field: 'resName', headerName: 'رستوران', width: 250 },\r\n    ];\r\n\r\n    getResReceipts = () =>{\r\n        requests.newResReceiptsList((res)=>{\r\n            if(res.statusCode === 200){\r\n                this.setState({\r\n                    row:this.createRows(res.data)\r\n                })\r\n                this.props.setResReceipts(res.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    createRows = (resReceiptsList) =>{\r\n        return resReceiptsList.map(eR=>{\r\n            let status = \"مشخص نشده\" ;\r\n            switch (eR['status']){\r\n                case \"created-notPaid\":\r\n                    status = \"در انتظار پرداخت\";\r\n                    break;\r\n                case \"paid\":\r\n                    status = \"پرداخت شده\";\r\n                    break;\r\n            }\r\n\r\n            return {\r\n                id:eR['resSettlementId'],\r\n                resName:eR['resEnglishName'],\r\n                amount:eR['paidAmount'] > 100 ? eR['paidAmount'] : eR['toPayAmount'],\r\n                status:status,\r\n                date:eR['paidDate'] > 1000 ? moment(new Date(eR['paidDate']*1000)).format('jYYYY/jM/jD HH:mm:ss') : moment(new Date(eR['createdDate']*1000)).format('jYYYY/jM/jD HH:mm:ss'),\r\n                moreDetails:eR,\r\n                pay:eR,\r\n            }\r\n        })\r\n    }\r\n\r\n    handleMoreDetails=(receipt)=>{\r\n        let receiptInfo =\r\n            receipt.resEnglishName + '<br/>' +\r\n            \"جزئیات: \" + receipt.details + '<br/>'+\r\n            \"مجموع دریافتی ها انلاین: \" + receipt.tOnlineIncomeTillNow + '<br/>' +\r\n            \"مجموع دریافتی ها افلاین: \" + receipt.tCashIncomeTillNow + '<br/>' +\r\n            \"مجموع دریافتی ها انلاین از اخرین فاکتور: \" + receipt.tOnlineIncomeFromLastSettlement + '<br/>' +\r\n            \"مجموع دریافتی ها افلاین از اخرین فاکتور: \" +receipt.tCashIncomeFromLastSettlement + '<br/>' +\r\n            \"مجموع فاکتور از تاریخ اخرین فاکتور: \" + (parseInt(receipt.tOnlineIncomeFromLastSettlement) + parseInt(receipt.tCashIncomeFromLastSettlement)) + '<br/>'+\r\n            \"تاریخ ایجاد: \" + moment(new Date(receipt.createdDate*1000)).format('jYYYY/jM/jD HH:mm:ss') + '<br/>';\r\n\r\n        if(receipt.status === \"created-notPaid\"){\r\n            receiptInfo +=\r\n                \"مبلغ قابل پرداخت: \" + receipt.toPayAmount + '<br/>'+\r\n                \"نام ایجاد کننده فاکتور: \" + receipt.creatorSupportName + '<br/>' ;\r\n        }else if(receipt.status === \"paid\"){\r\n            receiptInfo +=\r\n                \"تاریخ پرداخت: \" + moment(new Date(receipt.paidDate*1000)).format('jYYYY/jM/jD HH:mm:ss') + '<br/>' +\r\n                \"مبلغ پرداخت شده: \" + receipt.paidAmount + '<br/>' +\r\n                \"شماره کارت پرداخت کننده: \" + receipt.paidOurABankNum + '<br/>' +\r\n                \"شماره کارت رستوران: \" + receipt.paidResABankNum + '<br/>' +\r\n                \"پیگیری پرداخت: \" + receipt.paidBankTrackingId + '<br/>' +\r\n                \"نام ایجاد کننده فاکتور: \" + receipt.creatorSupportName + '<br/>' +\r\n                \"نام پرداخت کننده فاکتور: \" + receipt.creatorSupportName + '<br/>' ;\r\n        }\r\n\r\n        ReactSwal.fire({\r\n            title: 'جزئیات فاکتور',\r\n            html: receiptInfo,\r\n            icon: 'info',\r\n            confirmButtonText: 'تایید'\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'container-receipts-list'} >\r\n                <DataGrid rows={this.state.row} columns={this.columns} pageSize={5} hideFooterSelectedRowCount/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        resReceiptsList: state.reducerGeneralData.resReceipts,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps() {\r\n    return {\r\n        setResReceipts: actions.setResReceipts,\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(ResReceiptsList);\r\n\r\n\r\n","E:\\WorkProjects\\cuki-admin\\src\\reduxStore\\reducers\\reducerAdminInfo.js",[],"E:\\WorkProjects\\cuki-admin\\src\\reduxStore\\reducers\\reducerGeneralData.js",[],"E:\\WorkProjects\\cuki-admin\\src\\reduxStore\\actions.js",[],"E:\\WorkProjects\\cuki-admin\\src\\ApiRequests\\requests.js",[],"E:\\WorkProjects\\cuki-admin\\src\\reduxStore\\cachedData\\cachedData.js",["92","93"],"import Cookies from \"js-cookie\";\r\n\r\n// its completely an UNSAFE WAY !!!!\r\n// fix it later\r\nconst cookieNameUserPass = \"adminCukiToken_00021031\"","E:\\WorkProjects\\cuki-admin\\src\\reduxStore\\reducers\\__init__Reducers.js",[],["94","95"],"E:\\WorkProjects\\cuki-admin\\src\\reduxStore\\actionTypes.js",[],"E:\\WorkProjects\\cuki-admin\\src\\Components\\newResReceipt\\NewResReceipt.js",["96","97"],"import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Button, Select, MenuItem, FormControl, InputLabel, TextField }  from \"@material-ui/core\";\r\nimport * as requests from \"../../ApiRequests/requests\"\r\nimport * as actions from \"../../reduxStore/actions\"\r\nimport \"./css/style.css\"\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nconst ReactSwal = withReactContent(Swal)\r\n\r\nclass NewResReceipt extends Component {\r\n\r\n    state={\r\n        receiptDetails:\"\",\r\n        selectedResEnglishName:\"\",\r\n        formClassName:\"slider\",\r\n        containerClassName:\"slider-box\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getResList();\r\n    }\r\n\r\n    getResList = ()=>{\r\n        requests.getResList((res)=>{\r\n            if(res.statusCode === 200){\r\n                this.setState({\r\n                    selectedResEnglishName:res.data[0].englishName\r\n                })\r\n                this.props.setResList(res.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSubmitNewResReceipt = (elem) =>{\r\n        elem.preventDefault();\r\n    }\r\n\r\n    handleClickNewReceipt = () => {\r\n        if (this.state.formClassName.split(\" \").indexOf(\"open\") === -1) {\r\n            this.setState({\r\n                formClassName: \" slider open \",\r\n                containerClassName: \" slider-box open \",\r\n            });\r\n        } else {\r\n            this.setState({\r\n                formClassName: \" slider \",\r\n                containerClassName: \" slider-box \",\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSubmitNewReceipt = () =>{\r\n        requests.newResReceipt(this.state.selectedResEnglishName, this.state.receiptDetails, (res)=>{\r\n            if(res.statusCode === 200){\r\n                let receiptInfo =\r\n                    res.data.resEnglishName + '<br/>' +\r\n                    \"مجموع دریافتی ها انلاین: \" + res.data.totalOnlineIncomeAllTime + '<br/>' +\r\n                    \"مجموع دریافتی ها افلاین: \" + res.data.totalCashIncomeAllTime + '<br/>' +\r\n                    \"مجموع دریافتی ها انلاین از اخرین فاکتور: \" + res.data.totalOnlineIncomeFromLastSettlementTillNow + '<br/>' +\r\n                    \"مجموع دریافتی ها افلاین از اخرین فاکتور: \" + res.data.totalCashIncomeFromLastSettlementTillNow + '<br/>' +\r\n                    \"مجموع فاکتور از تاریخ اخرین فاکتور: \" + (res.data.totalOnlineIncomeFromLastSettlementTillNow + res.data.totalCashIncomeFromLastSettlementTillNow) + '<br/>';\r\n\r\n                    ReactSwal.fire({\r\n                    title: '.با موفقیت ثبت شد',\r\n                    html: receiptInfo,\r\n                    icon: 'success',\r\n                    confirmButtonText: 'تایید'\r\n                })\r\n            }else{\r\n                ReactSwal.fire({\r\n                    title: '!ثبت نشد',\r\n                    text: res.details,\r\n                    icon: 'error',\r\n                    confirmButtonText: 'تایید'\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.state.containerClassName + \" main-container\"}>\r\n                <div className=\"new-receipt-button\">\r\n                    <Button onClick={this.handleClickNewReceipt} variant=\"outlined\">ایجاد رسید جدید</Button>\r\n                </div>\r\n                <div className={\"res-selector\"}>\r\n                    <Select\r\n                        value={this.state.selectedResEnglishName}\r\n                        onChange={(event)=>{this.setState({selectedResEnglishName:event.target.value})}}\r\n                    >\r\n                        {this.props.resList.map(eRes=>{\r\n                            return(\r\n                                <MenuItem key={eRes.restaurantId} value={eRes.englishName}>{eRes.persianName}</MenuItem>\r\n                            );\r\n                        })}\r\n                    </Select>\r\n                </div>\r\n                <div className={this.state.formClassName + \" new-receipt-form\"}>\r\n                    <form onSubmit={this.handleSubmitNewResReceipt}>\r\n                        <TextField\r\n                            label=\"جزییات\"\r\n                            multiline\r\n                            defaultValue={this.state.receiptDetails}\r\n                            onChange={(event)=>{this.setState({receiptDetails:event.target.value})}}\r\n                            rows={5}\r\n                            variant=\"outlined\"\r\n                            fullWidth={true}\r\n                        />\r\n                        <div className={\"form-SB\"}>\r\n                            <Button onClick={this.handleSubmitNewReceipt} variant=\"outlined\" color=\"primary\">ثبت</Button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        resList: state.reducerGeneralData.resList,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps() {\r\n    return {\r\n        setResList: actions.setResList,\r\n    };\r\n}\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(NewResReceipt);","E:\\WorkProjects\\cuki-admin\\src\\Components\\navBar\\navBar.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":7,"column":8,"nodeType":"104","messageId":"105","endLine":7,"endColumn":15},{"ruleId":"106","severity":1,"message":"107","line":43,"column":17,"nodeType":"108","endLine":43,"endColumn":115},{"ruleId":"102","severity":1,"message":"109","line":2,"column":9,"nodeType":"104","messageId":"105","endLine":2,"endColumn":16},{"ruleId":"102","severity":1,"message":"110","line":5,"column":13,"nodeType":"104","messageId":"105","endLine":5,"endColumn":20},{"ruleId":"102","severity":1,"message":"111","line":8,"column":5,"nodeType":"104","messageId":"105","endLine":8,"endColumn":16},{"ruleId":"102","severity":1,"message":"112","line":10,"column":5,"nodeType":"104","messageId":"105","endLine":10,"endColumn":11},{"ruleId":"102","severity":1,"message":"113","line":12,"column":5,"nodeType":"104","messageId":"105","endLine":12,"endColumn":12},{"ruleId":"102","severity":1,"message":"114","line":13,"column":5,"nodeType":"104","messageId":"105","endLine":13,"endColumn":15},{"ruleId":"102","severity":1,"message":"115","line":15,"column":5,"nodeType":"104","messageId":"105","endLine":15,"endColumn":19},{"ruleId":"116","severity":1,"message":"117","line":61,"column":25,"nodeType":"108","endLine":65,"endColumn":73},{"ruleId":"116","severity":1,"message":"117","line":72,"column":25,"nodeType":"108","endLine":72,"endColumn":119},{"ruleId":"118","severity":1,"message":"119","line":64,"column":13,"nodeType":"120","messageId":"121","endLine":71,"endColumn":14},{"ruleId":"102","severity":1,"message":"122","line":1,"column":8,"nodeType":"104","messageId":"105","endLine":1,"endColumn":15},{"ruleId":"102","severity":1,"message":"123","line":5,"column":7,"nodeType":"104","messageId":"105","endLine":5,"endColumn":25},{"ruleId":"98","replacedBy":"124"},{"ruleId":"100","replacedBy":"125"},{"ruleId":"102","severity":1,"message":"126","line":3,"column":35,"nodeType":"104","messageId":"105","endLine":3,"endColumn":46},{"ruleId":"102","severity":1,"message":"127","line":3,"column":48,"nodeType":"104","messageId":"105","endLine":3,"endColumn":58},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'Sidebar' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'NavLink' is defined but never used.","'cookies' is defined but never used.","'faBriefcase' is defined but never used.","'faCopy' is defined but never used.","'faImage' is defined but never used.","'faQuestion' is defined but never used.","'faAlignJustify' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Cookies' is defined but never used.","'cookieNameUserPass' is assigned a value but never used.",["128"],["129"],"'FormControl' is defined but never used.","'InputLabel' is defined but never used.","no-global-assign","no-unsafe-negation"]